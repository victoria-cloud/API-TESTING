{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2023-08-16T09:46:36.700Z",
    "end": "2023-08-16T09:46:36.855Z",
    "duration": 155,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "620e84a5-3c43-409f-91fe-f86a2ce54726",
      "title": "",
      "fullFile": "C:\\advancedAutomationMentoring\\API-TESTING\\API-TESTING\\test\\reporPortal-spec.js",
      "file": "\\test\\reporPortal-spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77c7d249-9b8a-4166-add1-c46f1b7bdbd7",
          "title": "RP's API testing: ",
          "fullFile": "C:\\advancedAutomationMentoring\\API-TESTING\\API-TESTING\\test\\reporPortal-spec.js",
          "file": "\\test\\reporPortal-spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET dashboard by name should return certain dashboard info",
              "fullTitle": "RP's API testing:  GET dashboard by name should return certain dashboard info",
              "timedOut": false,
              "duration": 55,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let response = await axios.get(`${baseUrl}/v1/${projectName}/dashboard`, header)\nexpect(response.status).to.equal(200)\nexpect(response.data.content[0]).to.deep.equal(testObject)",
              "err": {
                "message": "AssertionError: expected { description: 'test', …(5) } to deeply equal { description: '123', …(5) }",
                "estack": "AssertionError: expected { description: 'test', …(5) } to deeply equal { description: '123', …(5) }\n    at Context.<anonymous> (test\\reporPortal-spec.js:38:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": " {\n-   \"description\": \"test\"\n-   \"id\": 2\n-   \"name\": \"test\"\n+   \"description\": \"123\"\n+   \"id\": 1\n+   \"name\": \"123\"\n   \"owner\": \"default\"\n-   \"share\": true\n+   \"share\": false\n   \"widgets\": []\n }\n"
              },
              "uuid": "25f7b881-9bbc-4610-b6dc-a98e4bafb135",
              "parentUUID": "77c7d249-9b8a-4166-add1-c46f1b7bdbd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST shoult create new dashboard and return id",
              "fullTitle": "RP's API testing:  POST shoult create new dashboard and return id",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await axios.post(`${baseUrl}/v1/${projectName}/dashboard`,\n    newDashboard,\n    header\n)\nlastCreatedDashboardID = response.data.id\nexpect(response.status).to.equal(201)\nexpect(response.data).to.have.property('id')",
              "err": {},
              "uuid": "841dc5c2-83d6-405f-838b-ff76a66db9f7",
              "parentUUID": "77c7d249-9b8a-4166-add1-c46f1b7bdbd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT update dashboard by id and return success message",
              "fullTitle": "RP's API testing:  PUT update dashboard by id and return success message",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await axios.put(`${baseUrl}/v1/${projectName}/dashboard/${lastCreatedDashboardID}`,\n            {\n                \"description\": \"UPDATED\",\n                \"name\": randomstring.generate(7),\n                \"share\": true,\n                \"updateWidgets\": []\n            },\n            header\n        )\n        console.log(response.data)\n        expect(response.status).to.equal(200)\n        expect(response.data).to.have.property('message').equal(`Dashboard with ID = '${lastCreatedDashboardID}' successfully updated`)",
              "err": {},
              "uuid": "756f19dc-104a-44a7-a5f9-80d4140d2718",
              "parentUUID": "77c7d249-9b8a-4166-add1-c46f1b7bdbd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE should delete dashboard by name and return success message",
              "fullTitle": "RP's API testing:  DELETE should delete dashboard by name and return success message",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await axios.delete(`${baseUrl}/v1/${projectName}/dashboard/${lastCreatedDashboardID}`, header)\nconsole.log(response.data)\nexpect(response.status).to.equal(200)\nexpect(response.data).to.have.property('message').equal(`Dashboard with ID = '${lastCreatedDashboardID}' successfully deleted.`)",
              "err": {},
              "uuid": "b7955f49-0243-4c6f-b77d-8a1ea46d261c",
              "parentUUID": "77c7d249-9b8a-4166-add1-c46f1b7bdbd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "841dc5c2-83d6-405f-838b-ff76a66db9f7",
            "756f19dc-104a-44a7-a5f9-80d4140d2718",
            "b7955f49-0243-4c6f-b77d-8a1ea46d261c"
          ],
          "failures": [
            "25f7b881-9bbc-4610-b6dc-a98e4bafb135"
          ],
          "pending": [],
          "skipped": [],
          "duration": 143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}